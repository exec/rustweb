# RustWeb HTTP Server - Docker Configuration
# This configuration is optimized for containerized deployment

[server]
listen = ["0.0.0.0:8080", "0.0.0.0:8443"]
listen_quic = ["0.0.0.0:8443"]
enable_http3 = true
max_connections = 10000
keep_alive_timeout = 65
request_timeout = 60
send_timeout = 60
client_body_timeout = 60
client_header_timeout = 60
client_max_body_size = 1048576
tcp_nodelay = true
tcp_fastopen = false

[logging]
log_level = "info"
# For Docker, log to stdout/stderr instead of files
access_log = "/dev/stdout"
error_log = "/dev/stderr"
access_log_format = "$remote_addr - $remote_user [$time_local] \"$request\" $status $body_bytes_sent \"$http_referer\" \"$http_user_agent\""

[security]
enable_rate_limiting = true
rate_limit_requests_per_second = 1000
rate_limit_burst = 2000
max_request_size = 10485760
allowed_methods = ["GET", "POST", "HEAD", "PUT", "DELETE", "PATCH", "OPTIONS"]

[security.security_headers]
"X-Frame-Options" = "DENY"
"X-Content-Type-Options" = "nosniff"
"X-XSS-Protection" = "1; mode=block"
"Strict-Transport-Security" = "max-age=31536000; includeSubDomains"

[compression]
enable_gzip = true
enable_brotli = true
enable_zstd = true
compression_level = 6
min_compress_size = 1024
compress_types = [
    "text/html",
    "text/css", 
    "text/javascript",
    "text/plain",
    "application/javascript",
    "application/json",
    "application/xml",
    "image/svg+xml"
]

[upstream]

[virtual_hosts]
[virtual_hosts.default]
server_name = ["_"]  # Default catch-all
document_root = "/var/www/html"
index_files = ["index.html", "index.htm"]

[virtual_hosts.default.locations]

[virtual_hosts.default.ssl]
certificate = "/etc/rustweb/ssl/cert.pem"
private_key = "/etc/rustweb/ssl/key.pem"
auto_generate_self_signed = true  # Enable for Docker development
protocols = ["TLSv1.2", "TLSv1.3"]